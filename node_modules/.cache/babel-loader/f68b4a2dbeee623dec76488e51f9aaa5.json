{"remainingRequest":"/home/tengu/Documents/vue-firebase/live-chat/node_modules/babel-loader/lib/index.js!/home/tengu/Documents/vue-firebase/live-chat/src/composables/getCollection.js","dependencies":[{"path":"/home/tengu/Documents/vue-firebase/live-chat/src/composables/getCollection.js","mtime":1611002682351},{"path":"/home/tengu/Documents/vue-firebase/live-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tengu/Documents/vue-firebase/live-chat/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvdGVuZ3UvRG9jdW1lbnRzL3Z1ZS1maXJlYmFzZS9saXZlLWNoYXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgeyByZWYgfSBmcm9tICd2dWUnOwppbXBvcnQgeyBwcm9qZWN0RmlyZXN0b3JlIH0gZnJvbSAnLi4vZmlyZWJhc2UvY29uZmlnJzsKCnZhciBnZXRDb2xsZWN0aW9uID0gZnVuY3Rpb24gZ2V0Q29sbGVjdGlvbihjb2xsZWN0aW9uKSB7CiAgdmFyIGRvY3VtZW50cyA9IHJlZihudWxsKTsKICB2YXIgZXJyb3IgPSByZWYobnVsbCk7IC8vIHJlZ2lzdGVyIHRoZSBmaXJlc3RvcmUgY29sbGVjdGlvbiByZWZlcmVuY2UKCiAgdmFyIGNvbGxlY3Rpb25SZWYgPSBwcm9qZWN0RmlyZXN0b3JlLmNvbGxlY3Rpb24oY29sbGVjdGlvbikub3JkZXJCeSgnY3JlYXRlZEF0Jyk7CiAgY29sbGVjdGlvblJlZi5vblNuYXBzaG90KGZ1bmN0aW9uIChzbmFwKSB7CiAgICB2YXIgcmVzdWx0cyA9IFtdOwogICAgc25hcC5kb2NzLmZvckVhY2goZnVuY3Rpb24gKGRvYykgewogICAgICAvLyBtdXN0IHdhaXQgZm9yIHRoZSBzZXJ2ZXIgdG8gY3JlYXRlIHRoZSB0aW1lc3RhbXAgJiBzZW5kIGl0IGJhY2sKICAgICAgLy8gd2UgZG9uJ3Qgd2FudCB0byBlZGl0IGRhdGEgdW50aWwgaXQgaGFzIGRvbmUgdGhpcwogICAgICBkb2MuZGF0YSgpLmNyZWF0ZWRBdCAmJiByZXN1bHRzLnB1c2goX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBkb2MuZGF0YSgpKSwge30sIHsKICAgICAgICBpZDogZG9jLmlkCiAgICAgIH0pKTsKICAgIH0pOyAvLyB1cGRhdGUgdmFsdWVzCgogICAgZG9jdW1lbnRzLnZhbHVlID0gcmVzdWx0czsKICAgIGVycm9yLnZhbHVlID0gbnVsbDsKICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICBjb25zb2xlLmxvZyhlcnIubWVzc2FnZSk7CiAgICBkb2N1bWVudHMudmFsdWUgPSBudWxsOwogICAgZXJyb3IudmFsdWUgPSAnY291bGQgbm90IGZldGNoIHRoZSBkYXRhJzsKICB9KTsKICByZXR1cm4gewogICAgZXJyb3I6IGVycm9yLAogICAgZG9jdW1lbnRzOiBkb2N1bWVudHMKICB9Owp9OwoKZXhwb3J0IGRlZmF1bHQgZ2V0Q29sbGVjdGlvbjs="},{"version":3,"sources":["/home/tengu/Documents/vue-firebase/live-chat/src/composables/getCollection.js"],"names":["ref","projectFirestore","getCollection","collection","documents","error","collectionRef","orderBy","onSnapshot","snap","results","docs","forEach","doc","data","createdAt","push","id","value","err","console","log","message"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAgB;AAEpC,MAAMC,SAAS,GAAGJ,GAAG,CAAC,IAAD,CAArB;AACA,MAAMK,KAAK,GAAGL,GAAG,CAAC,IAAD,CAAjB,CAHoC,CAKpC;;AACA,MAAIM,aAAa,GAAGL,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,EACjBI,OADiB,CACT,WADS,CAApB;AAGAD,EAAAA,aAAa,CAACE,UAAd,CAAyB,UAAAC,IAAI,EAAI;AAC/B,QAAIC,OAAO,GAAG,EAAd;AACAD,IAAAA,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkB,UAAAC,GAAG,EAAI;AACvB;AACA;AACAA,MAAAA,GAAG,CAACC,IAAJ,GAAWC,SAAX,IAAwBL,OAAO,CAACM,IAAR,iCAAiBH,GAAG,CAACC,IAAJ,EAAjB;AAA6BG,QAAAA,EAAE,EAAEJ,GAAG,CAACI;AAArC,SAAxB;AACD,KAJD,EAF+B,CAQ/B;;AACAb,IAAAA,SAAS,CAACc,KAAV,GAAkBR,OAAlB;AACAL,IAAAA,KAAK,CAACa,KAAN,GAAc,IAAd;AACD,GAXD,EAWG,UAAAC,GAAG,EAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACAlB,IAAAA,SAAS,CAACc,KAAV,GAAkB,IAAlB;AACAb,IAAAA,KAAK,CAACa,KAAN,GAAc,0BAAd;AACD,GAfD;AAiBA,SAAO;AAAEb,IAAAA,KAAK,EAALA,KAAF;AAASD,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD,CA3BD;;AA6BA,eAAeF,aAAf","sourcesContent":["import { ref } from 'vue'\nimport { projectFirestore } from '../firebase/config'\n\nconst getCollection = (collection) => {\n\n  const documents = ref(null)\n  const error = ref(null)\n\n  // register the firestore collection reference\n  let collectionRef = projectFirestore.collection(collection)\n    .orderBy('createdAt')\n\n  collectionRef.onSnapshot(snap => {\n    let results = []\n    snap.docs.forEach(doc => {\n      // must wait for the server to create the timestamp & send it back\n      // we don't want to edit data until it has done this\n      doc.data().createdAt && results.push({...doc.data(), id: doc.id})\n    });\n    \n    // update values\n    documents.value = results\n    error.value = null\n  }, err => {\n    console.log(err.message)\n    documents.value = null\n    error.value = 'could not fetch the data'\n  })\n\n  return { error, documents }\n}\n\nexport default getCollection"]}]}